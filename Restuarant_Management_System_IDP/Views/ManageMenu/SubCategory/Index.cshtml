@model IEnumerable<SubCategory>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string deletemessage = "Once deleted, you will not be able to recover";
}

<h1>Index</h1>
<br />
<br />
<div class="border backgroundWhite">
    <div class="row">
        <div class="col-6">
            <h2 class="text-info"> SubCategory List</h2>
        </div>
        <div class="col-6 text-end">
            <p>
                <a asp-action="SubCategoryCreate" asp-controller="ManageMenu" class="btn btn-info">Create New</a>
            </p>
        </div>
    </div>
    <form id="searchForm" asp-action="SearchSubCategory">
        <div class="row form-group mb-3 ml-1">
            <input type="text" class="form-control w-75" id="searchQuery" name="searchQuery" placeholder="Search by Category, Subcategory">
            <select id="searchType" name="searchType" class="form-select form-control w-25">
                <option selected value="Category">Category</option>
                <option value="Subcategory">Subcategory</option>
            </select>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        </div>
        <div>
            <div class="form-group">
                @* <input type="hidden" id="actionType" name="actionType" value="" /> *@
                <input type="submit" name="button" id="searchButton" value="Search" class="btn btn-primary" />
                <input type="submit" name="button" id="showAllButton" value="Show all" class="btn btn-primary" />
            </div>
        </div>
    </form>
    <br />
    <div>
        @if (Model.Count() > 0)
        {
            <table class="table table-striped border">
                <tr class="table-secondary">
                    <th>
                        @*<label asp-for="First().Name"></label>*@
                        @Html.DisplayNameFor(m => m.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Category.Name)
                    </th>
                    <th></th>
                    <th></th>
                </tr>
                @foreach (var subcategory in Model)
                {
                    <tr>
                        <td>
                            @* <label asp-for="category.Name"></label> *@
                            @Html.DisplayFor(m => subcategory.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(m => subcategory.Category.Name)
                        </td>
                        <td>
                        <td style="width:150px">
                            <div class="btn btn-group" role="group">
                                <a class="btn btn-primary text-white" asp-action="SubCategoryEdit" asp-route-Id="@subcategory.Id">Edit</a>
                                <a class="btn btn-success text-white" asp-action="SubCategoryDetails" asp-route-Id="@subcategory.Id">Details</a>
                                <button asp-action="CategoryDelete" asp-route-id="@Model" data-message="@deletemessage" onclick="Delete('@Url.Action("SubCategoryDelete", new { id = subcategory.Id })',this)" class="btn btn-danger text-white"><i class="fas fa-trash-alt"></i>Delete</button>
                            </div>
                        </td>
                    </tr>
                }
            </table>
        }
        else
        {
            <p> No category exists....</p>
        }

    </div>
</div>

<script>
    @* $(document).ready(function() { *@
    @*     $('#searchButton').on('click', function() { *@
    @*         $('#actionType').val('search'); *@
    @*         submitForm(); *@
    @*     }); *@

    @*     $('#showAllButton').on('click', function() { *@
    @*         $('#actionType').val('showAll'); *@
    @*         submitForm(); *@
    @*     }); *@

    @*     function submitForm() { *@
    @*         $.ajax({ *@
    @*             url: 'SearchSubCategory', *@
    @*             type: 'POST', *@
    @*             data: $('#searchForm').serialize(), *@
    @*             success: function(response) { *@
    @*                 // Handle the response from the server *@
    @*                 console.log(response); *@
    @*             }, *@
    @*             error: function(xhr, status, error) { *@
    @*                 // Handle any errors *@
    @*                 console.error(error); *@
    @*             } *@
    @*         }); *@
    @*     } *@
    @* }); *@
</script>
