@model LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<h1>Login</h1>

<partial name="_StatusMessage" model="Model.StatusMessage" />


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Username" class="control-label mb-1"></label>
                <input asp-for="Username" class="form-control" placeholder="Enter your username or Email"/>
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <label asp-for="Password" class="control-label mb-1"></label>
                <input asp-for="Password" class="form-control" placeholder="Enter your password"/>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Log in" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<br />
<div>
    Don't have an Account? 
    <a asp-action="Register" asp-controller="Account">  Register</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            var message = '@ViewData["Message"]';
            // console.log(message);
            if(message){
                toastr.success(message);
            }
            // toastr.success('Welcome to the application!');
            // toastr.success('', '', { timeOut: 1500, extendedTimeOut: 1000 });
            // console.log("working?");
        });
    </script>
}
